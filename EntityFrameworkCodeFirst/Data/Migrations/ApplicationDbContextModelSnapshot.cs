// <auto-generated />
using System;
using EntityFrameworkCodeFirst.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFrameworkCodeFirst.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("EntityFrameworkCodeFirst.Models.DatabaseModels.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Johan",
                            LastName = "Edlund"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Heikki",
                            LastName = "Wallenberg"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Leo",
                            LastName = "Andersson"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Ellen",
                            LastName = "Blixt"
                        });
                });

            modelBuilder.Entity("EntityFrameworkCodeFirst.Models.DatabaseModels.LeaveApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("LeaveApplicationReasonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveApplicationReasonId");

                    b.ToTable("LeaveApplications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 4, 15, 12, 19, 22, 892, DateTimeKind.Local).AddTicks(308),
                            EmployeeId = 1,
                            EndDate = new DateTime(2024, 5, 13, 12, 19, 22, 892, DateTimeKind.Local).AddTicks(305),
                            LeaveApplicationReasonId = 2,
                            Note = "I can't take this job anymore. I need a break.",
                            StartDate = new DateTime(2024, 4, 15, 12, 19, 22, 892, DateTimeKind.Local).AddTicks(266)
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 4, 15, 12, 19, 22, 892, DateTimeKind.Local).AddTicks(313),
                            EmployeeId = 2,
                            EndDate = new DateTime(2024, 4, 16, 12, 19, 22, 892, DateTimeKind.Local).AddTicks(312),
                            LeaveApplicationReasonId = 3,
                            Note = "I need to stay home and care for my sick child for a couple of days.",
                            StartDate = new DateTime(2024, 4, 14, 12, 19, 22, 892, DateTimeKind.Local).AddTicks(311)
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2024, 4, 15, 12, 19, 22, 892, DateTimeKind.Local).AddTicks(316),
                            EmployeeId = 3,
                            EndDate = new DateTime(2024, 4, 20, 12, 19, 22, 892, DateTimeKind.Local).AddTicks(315),
                            LeaveApplicationReasonId = 1,
                            Note = "I must have caught the flu. I'll be out of commission for a while.",
                            StartDate = new DateTime(2024, 4, 8, 12, 19, 22, 892, DateTimeKind.Local).AddTicks(314)
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2024, 4, 15, 12, 19, 22, 892, DateTimeKind.Local).AddTicks(320),
                            EmployeeId = 4,
                            EndDate = new DateTime(2024, 4, 14, 12, 19, 22, 892, DateTimeKind.Local).AddTicks(319),
                            LeaveApplicationReasonId = 4,
                            StartDate = new DateTime(2024, 4, 12, 12, 19, 22, 892, DateTimeKind.Local).AddTicks(318)
                        });
                });

            modelBuilder.Entity("EntityFrameworkCodeFirst.Models.DatabaseModels.LeaveApplicationReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LeaveApplicationsReasons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Reason = "Sick Leave"
                        },
                        new
                        {
                            Id = 2,
                            Reason = "Vacation"
                        },
                        new
                        {
                            Id = 3,
                            Reason = "Parental Leave"
                        },
                        new
                        {
                            Id = 4,
                            Reason = "Other"
                        });
                });

            modelBuilder.Entity("EntityFrameworkCodeFirst.Models.DatabaseModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.HasIndex("UserRoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "a@a.a",
                            EmployeeId = 1,
                            Password = "123",
                            UserRoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "heikki@gmail.com",
                            EmployeeId = 2,
                            Password = "123",
                            UserRoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "leo@live.com",
                            EmployeeId = 3,
                            Password = "123",
                            UserRoleId = 2
                        },
                        new
                        {
                            Id = 4,
                            Email = "ellen@hotmail.com",
                            EmployeeId = 4,
                            Password = "123",
                            UserRoleId = 2
                        });
                });

            modelBuilder.Entity("EntityFrameworkCodeFirst.Models.DatabaseModels.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Role = "User"
                        });
                });

            modelBuilder.Entity("EntityFrameworkCodeFirst.Models.DatabaseModels.LeaveApplication", b =>
                {
                    b.HasOne("EntityFrameworkCodeFirst.Models.DatabaseModels.Employee", "Employee")
                        .WithMany("LeaveApplications")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkCodeFirst.Models.DatabaseModels.LeaveApplicationReason", "LeaveApplicationReason")
                        .WithMany()
                        .HasForeignKey("LeaveApplicationReasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LeaveApplicationReason");
                });

            modelBuilder.Entity("EntityFrameworkCodeFirst.Models.DatabaseModels.User", b =>
                {
                    b.HasOne("EntityFrameworkCodeFirst.Models.DatabaseModels.Employee", "Employee")
                        .WithOne("User")
                        .HasForeignKey("EntityFrameworkCodeFirst.Models.DatabaseModels.User", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkCodeFirst.Models.DatabaseModels.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("EntityFrameworkCodeFirst.Models.DatabaseModels.Employee", b =>
                {
                    b.Navigation("LeaveApplications");

                    b.Navigation("User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
